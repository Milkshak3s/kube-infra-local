apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet
  namespace: fleet
  labels:
    app: fleet
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fleet
  template:
    metadata:
      labels:
        app: fleet
    spec:
      containers:
      - name: fleet
        image: fleetdm/fleet:4.25.0
        env:
          # if running Fleet behind external ingress controller that terminates TLS
          - name: FLEET_SERVER_TLS
            value: "FALSE"
          - name: FLEET_VULNERABILITIES_DATABASES_PATH
            value: /tmp/vuln
          - name: FLEET_MYSQL_ADDRESS
            valueFrom:
              secretKeyRef:
                name: fleet-secrets
                key: mysql_address
          - name: FLEET_MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: fleet-secrets
                key: mysql_database
          - name: FLEET_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: fleet-secrets
                key: mysql_password
          - name: FLEET_MYSQL_USERNAME
            valueFrom:
              secretKeyRef:
                name: fleet-secrets
                key: mysql_username
          - name: FLEET_REDIS_ADDRESS
            valueFrom:
              secretKeyRef:
                name: fleet-secrets
                key: redis_address
        volumeMounts:
          - name: tmp
            mountPath: /tmp # /tmp might not work on all cloud providers by default
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "2048Mi" # vulnerability processing
            cpu: "500m"
        ports:
        - containerPort: 3000
      volumes:
        - name: tmp
          emptyDir: {}
